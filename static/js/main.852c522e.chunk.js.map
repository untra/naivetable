{"version":3,"sources":["NaiveTable.tsx","routes/home.tsx","routes/test.tsx","routes/index.tsx","index.tsx"],"names":["defaultComparefn","a","b","concat","localeCompare","defaultTableStyle","display","gridTemplateColumns","borderTop","borderRight","borderLeft","borderBottom","defaultCellStyle","padding","defaultHeaderStyle","position","backgroundColor","fontWeight","cssSortStyle","border","borderWidth","top","right","opacity","cssSortSelected","cssSortAsc","_objectSpread","transform","cssSortDsc","defaultRenderFunc","data","react_default","createElement","defaultHeaders","dataKey","label","width","render","sort","indexHeader","buildInititalState","props","includeIndex","cellStyle","tableStyle","incIndexHeader","incHeaders","headers","paragon","Object","keys","map","key","inferHeadersFromData","toConsumableArray","_inferInitialSort","currentIndex","getSort","header","undefined","getIndex","reduce","_ref","_ref2","slicedToArray","dir","index","inferInitialSort","_inferInitialSort2","sortDir","sortIndex","NaiveTable","tableHeaders","initState","shouldRenderHeaders","_useState","useState","_useState2","state","setState","gridStyle","acc","headerColumnWidths","renderedHeaders","style","headerStyle","indexSelected","cssSortSelectedAsc","cssSortSelectedDsc","upArrow","downArrow","onClick","change","renderedRows","comparison","processSort","tableData","indexr","dataObj","rowIndex","renderCell","dataVal","className","words","wwords","version","packageJSON","randomData","nToGen","rows","_loop","row","forEach","Math","random","blamDataRows","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomFilenames","randomFilename","rand","floor","length","lang","W","input","role","aria-label","href","react_router_dom","to","color","textAlign","react_highlight_default","JSON","stringify","NaiveTable_NaiveTable","React","Component","llanowarData","llanowarDataJSON","varietyofDataTypesData","varietyofDataTypesDataJSON","styledHeaders","styledHeadersJSON","nameData","nameDataJSON","mtgHeaders","val","local_image","name","height","alt","src","mana_cost","type_line","oracle_text","power","toughness","flavor_text","fontStyle","nameHeaders","c","Test","flatDataJSON","of","reload","window","location","ReactDOM","basename","react_router","path","component","test","onEnter","exact","home","document","getElementById"],"mappings":"21GACA,IAKMA,EAA8B,SAACC,EAAQC,GAC3C,MAAO,GAAAC,OAAGF,GAAIG,cAAP,GAAAD,OAAwBD,KAG3BG,EAAyC,CAC7CC,QAAS,OACTC,oBAAqB,GACrBC,UAAW,kBACXC,YAAa,kBACbC,WAAY,kBACZC,aAAc,mBAGVC,EAAwC,CAC5CC,QAAS,UACTF,aAAc,kBACdH,UAAW,mBAGPM,EAA0C,CAC9CC,SAAU,WACVC,gBAAiB,YACjBC,WAAY,QAGRC,EAAoC,CACxCC,OAAQ,kBACRC,YAAa,cACbL,SAAU,WACVF,QAAS,kBACTQ,IAAK,EACLC,MAAO,EACPC,QAAS,IAGLC,EAAuC,CAC3CD,QAAS,GAGLE,EAA+BC,EAAA,GAChCR,EADgC,CAEnCS,UAAW,oBAGPC,EAA+BF,EAAA,GAChCR,EADgC,CAEnCS,UAAW,gBACXN,IAAK,KAmCDQ,EAAoB,SAACC,GAAD,OAAeC,EAAA9B,EAAA+B,cAAA,eAAA7B,OAAU2B,KAE7CG,EAAoC,CACxCC,QAAS,GACTC,MAAO,GACPC,MAAO,OACPC,OAAQR,EACRS,MAAM,GA6BFC,EAAiC,CACrCL,QA5HmB,UA6HnBC,MAAO,IACPC,MAAO,OACPC,OAAQR,GA6DJW,EAAqB,SAACC,GAE1B,IAAMC,EAAeD,EAAMC,eAAgB,EACrCC,EAASjB,EAAA,GAAQd,EAAR,GAA6B6B,EAAME,WAC5CC,EAAUlB,EAAA,GAAQrB,EAAR,GAA8BoC,EAAMG,YAG9Cd,EAAOW,EAAMX,MAAQ,GAErBe,EAAsCH,EAAe,CAACH,GAAe,GACrEO,EAAaL,EAAMM,QAAUN,EAAMM,QApEd,SAACjB,GAC5B,IAAMkB,EAAUlB,EAAK,GACrB,OAAIkB,EACKC,OAAOC,KAAKF,GAASG,IAAI,SAAAC,GAM9B,OAL+B1B,EAAA,GAC1BO,EAD0B,CAE7BC,QAASkB,EACTjB,MAAOiB,MAKN,GAwD4CC,CAAqBvB,GAClEiB,EAAO,GAAA5C,OAAO0C,EAAPI,OAAAK,EAAA,EAAAL,CAA0BH,IAXgCS,EAfhD,SAACR,GACxB,IAAIS,GAAgB,EACdC,EAAU,SAACC,GAAD,QAAgD,IAAhBA,EAAOpB,KAAiB,MAA2B,QAAhBoB,EAAOpB,MAAkB,QAA2B,QAAhBoB,EAAOpB,MAAkB,YAAUqB,GACpJC,EAAW,SAACF,GAAD,OAA+BA,EAAOpB,KAAOkB,OAAeG,GAC7E,OAAOZ,EAAQc,OAAO,SAAAC,EAAeJ,GAAW,IAAAK,EAAAd,OAAAe,EAAA,EAAAf,CAAAa,EAAA,GAAxBG,EAAwBF,EAAA,GAAnBG,EAAmBH,EAAA,GAE9C,OADAP,GAAgB,EACT,CAACS,GAAOR,EAAQC,GAASQ,GAASN,EAASF,KACjD,MAACC,OAAwCA,IAoBdQ,CAAiBpB,GAZwBqB,EAAAnB,OAAAe,EAAA,EAAAf,CAAAM,EAAA,GAcvE,MAAO,CACLR,UACAL,eACAC,YACAC,aACAyB,QAnBqED,EAAA,IAa3C,MAO1BE,UApBqEF,EAAA,KA6B5DG,EAAwC,SACnD9B,GAEA,IAsEwB+B,EAtElBC,EAAYjC,EAAmBC,GAE/BiC,GAAwC,IAAlBjC,EAAMM,QAH/B4B,EAOuBC,mBAASH,GAPhCI,EAAA5B,OAAAe,EAAA,EAAAf,CAAA0B,EAAA,GAOIG,EAPJD,EAAA,GAOWE,EAPXF,EAAA,GASK9B,EAAuD+B,EAAvD/B,QAASH,EAA8CkC,EAA9ClC,WAAYD,EAAkCmC,EAAlCnC,UAAW2B,EAAuBQ,EAAvBR,UAAWD,EAAYS,EAAZT,QAI7CW,EAAStD,EAAA,GAAQkB,EAAR,CAAoBrC,oBAlFV,SAACwC,GAAD,OACzBA,EAAQc,OAAO,SAACoB,EAAKvB,GAAN,SAAAvD,OAAoB8E,EAApB,KAAA9E,OAA2BuD,EAAOtB,OAAS,OAA3C,MAAsD,IA+EzC8C,CAAmBnC,KAiEzCoC,EAAkBT,EAAsB3B,EAAQI,IA7DjC,SAACO,EAA2BQ,GAAkB,IACzD5B,EAAuBoB,EAAvBpB,KAAMH,EAAiBuB,EAAjBvB,MAAOiD,EAAU1B,EAAV0B,MACfC,EAAW3D,EAAA,GAAQZ,EAAR,GAA+B6B,EAA/B,GAA6CyC,GACxDE,EAAgBhB,IAAcJ,EAC9BqB,EAAqBD,GAA6B,QAAZjB,EAAoB7C,EAAkB,GAC5EgE,EAAqBF,GAA6B,QAAZjB,EAAoB7C,EAAkB,GAC5EiE,EACJnD,EACEP,EAAA9B,EAAA+B,cAAA,KAAGoD,MAAK1D,EAAA,GAAOD,EAAP,GAAsB8D,KAC5B,KACAG,EACJpD,EACEP,EAAA9B,EAAA+B,cAAA,KAAGoD,MAAK1D,EAAA,GAAOE,EAAP,GAAsB4D,KAC5B,KAOAG,EAAWrD,EALF,SAAC4B,GAAD,OAAmB,WAEhCa,EAAQrD,EAAA,GAAMoD,EAAN,CAAa/B,UAASuB,UAAWJ,EAAOG,QADnCC,IAAcJ,GAAqB,QAAZG,EAAqB,MAAQ,UAI9BuB,CAAO1B,GAApB,kBAAM,MAE9B,OACEnC,EAAA9B,EAAA+B,cAAA,QAAMoB,IAAKc,EAAOkB,MAAOC,EAAaM,QAASA,GAC5CxD,EADH,IACWsD,EADX,IACqBC,KAqCiD,KACpEG,EA9IY,SAAC/D,EAAiBiB,EAA8BsB,EAAwBC,GAC1F,QAAkBX,IAAdW,EACF,OAAOxC,EAET,IAAM4B,EAASX,EAAQuB,GACfhC,EAAkBoB,EAAlBpB,KAAMJ,EAAYwB,EAAZxB,QACR4D,EAA8B,oBAATxD,EAAuBA,EAAOtC,EACnDoD,EAAMlB,GAAW,GASvB,OAAOJ,EAAKQ,KARG,SAACrC,EAAYC,GAC1B,MAAgB,QAAZmE,EACKyB,EAAW7F,EAAEmD,GAAMlD,EAAEkD,KAGpB0C,EAAW7F,EAAEmD,GAAMlD,EAAEkD,MAiIW2C,CAAYtD,EAAMX,KAAMiB,EAASsB,EAASC,GAAWnB,KANzEqB,EAM4FzB,EANtD,SAC5DiD,EACAC,GAF4D,OAGzDzB,EAAarB,KA7BK+C,EA6BaF,EA7BKG,EA6BMF,EA7Be,SAC5DvC,EACAQ,GACG,IACKhC,EAAoBwB,EAApBxB,QAEFkE,EAFsB1C,EAAXrB,QAEYR,EAEvBwE,EAAgBnE,EAhRL,YAoRfA,EAEEiE,EAAW,EAGXD,EAAQhE,GAPVgE,EAQF,OACEnE,EAAA9B,EAAA+B,cAAA,QAAMoB,IAAKc,EAAOkB,MAAOzC,GAEtByD,EAAWC,GAAU,QArBN,IAACH,EAAkBC,KAkCzC,OACEpE,EAAA9B,EAAA+B,cAAA,OAAKsE,UAAW7D,EAAM6D,WAAa,GAAIlB,MAAOJ,GAC3CG,EACAU,ICtSDU,EAA0DC,EAG1DC,EAAUC,EAAYD,QActBE,EAZe,SAAC5D,EAAmB6D,GAEvC,IADA,IAAIC,EAAkB,GADoCC,EAAA,SAEjD5C,GACP,IAAM6C,EAAe,GACrBhE,EAAQiE,QAAQ,SAAAtD,GACdqD,EAAIrD,GAAUuD,KAAKC,WAErBL,EAAI,GAAA1G,OAAA8C,OAAAK,EAAA,EAAAL,CAAO4D,GAAP,CAAaE,KALV7C,EAAQ,EAAGA,EAAQ0C,EAAQ1C,IAAS4C,IAO7C,OAAOD,EAGUM,CAAa,CAAC,MAAO,MAAO,OAAQ,GAOlCC,cAGnB,SAAAA,EAAY3E,GAAwB,IAAA4E,EAAApE,OAAAqE,EAAA,EAAArE,CAAAsE,KAAAH,IAClCC,EAAApE,OAAAuE,EAAA,EAAAvE,CAAAsE,KAAAtE,OAAAwE,EAAA,EAAAxE,CAAAmE,GAAAM,KAAAH,KAAM9E,KAHSkF,gBAAkB,CAAC,OAAQ,kBAAmB,YAAa,cAAe,QAAS,iBAAkB,KAElFN,EAD5BO,eAAiBP,EAAKM,gBAAgB,GAG5C,IAAME,EAAOZ,KAAKa,MAAMb,KAAKC,SAAWG,EAAKM,gBAAgBI,QAC7DV,EAAKO,eAAiBP,EAAKM,gBAAgBE,IAASR,EAAKO,eACxCnF,EAATuF,KAJ0B,OAAAX,wEAWlC,IAAMY,EAAI,SAACC,GACT,IAAM5H,EAAUiG,EAAK,GAAe2B,IAAU,GAC9C,MAAO,GAAA/H,OAAGG,IAAa,UAGzB,OACEyB,EAAA9B,EAAA+B,cAAA,OAAKsE,UAAU,gBACbvE,EAAA9B,EAAA+B,cAAA,OAAKsE,UAAU,WACbvE,EAAA9B,EAAA+B,cAAA,UAAID,EAAA9B,EAAA+B,cAAA,QAAMmG,KAAK,MAAMC,aAAW,SAA5B,gBAAJ,eACArG,EAAA9B,EAAA+B,cAAA,UACGiG,EAAE,MADL,IACaA,EAAE,MADf,IACuBA,EAAE,MAAO,IADhC,eACkDA,EAAE,MACjDA,EAAE,MAAO,IACVlG,EAAA9B,EAAA+B,cAAA,KAAGqG,KAAK,wBAAR,SAHF,IAG2CtG,EAAA9B,EAAA+B,cAAA,KAAGqG,KAAK,8CAAR,WAH3C,KAG8GJ,EAAE,OAEhHlG,EAAA9B,EAAA+B,cAAA,YACED,EAAA9B,EAAA+B,cAAA,cACIyE,EADJ,KACe,IACb1E,EAAA9B,EAAA+B,cAACsG,EAAA,EAAD,CAAMC,GAAG,SAAT,SAFF,IAEiC,IAC/BxG,EAAA9B,EAAA+B,cAAA,KAAGqG,KAAK,uCAAR,UAHF,KAG6D,IAC3DtG,EAAA9B,EAAA+B,cAAA,KAAGqG,KAAK,mDAAR,OAJF,KAIsE,IACpEtG,EAAA9B,EAAA+B,cAAA,KAAGqG,KAAK,uDAAR,aAGJtG,EAAA9B,EAAA+B,cAAA,WACAD,EAAA9B,EAAA+B,cAAA,OAAKoD,MAAO,CACVvE,QAAS,OACT2H,MAAO,YACPC,UAAW,WAEX1G,EAAA9B,EAAA+B,cAAA,UACED,EAAA9B,EAAA+B,cAAA,4BADF,IAC+BiG,EAAE,MADjC,IACwClG,EAAA9B,EAAA+B,cAAA,WAAO,oBAC7CD,EAAA9B,EAAA+B,cAAA,YAAO,sCACN,IAAID,EAAA9B,EAAA+B,cAAA,WAGJiG,EAAE,OACHlG,EAAA9B,EAAA+B,cAAA,YAAO,cACNiG,EAAE,OAAOlG,EAAA9B,EAAA+B,cAAA,WACTiG,EAAE,OAAOlG,EAAA9B,EAAA+B,cAAA,WAAKD,EAAA9B,EAAA+B,cAAA,WACfD,EAAA9B,EAAA+B,cAAA,4CAGJD,EAAA9B,EAAA+B,cAAC0G,EAAAzI,EAAD,CAAWqG,UAAU,OAArB,gBAAAnG,OACkBoH,KAAKK,eADvB,0FAAAzH,OAIL8H,EAAE,OAJG,oBAAA9H,OAKMwI,KAAKC,UAAUjC,EAAW,GAAI,KAAM,GAL1C,gBAAAxG,OAML8H,EAAE,OANG,iCASAlG,EAAA9B,EAAA+B,cAAC6G,EAAD,CAAY/G,KAAM6E,aAjEMmC,IAAMC,mDCFlCC,EAA0BC,EAE1BC,EAAoCC,EAEpCC,EAAqCC,EAErCC,EAAsBC,EAItBC,EAAkC,CAAC,CACvCrH,MAAO,GACPD,QAAS,GACTkD,MAAO,CAAE9E,QAAS,QAClB+B,OAAQ,SAACoH,GAAa,IACXC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACtB,OAAQ5H,EAAA9B,EAAA+B,cAAA,OAAKI,MAAO,IAAKwH,OAAQ,IAAKC,IAAKF,EAAMG,IAAKJ,MAEvD,CACDvH,MAAO,GACPD,QAAS,GACTkD,MAAO,CAAE9E,QAAS,QAClB+B,OAAQ,SAACoH,GAAa,IACZE,EAA2EF,EAA3EE,KAAMI,EAAqEN,EAArEM,UAAWC,EAA0DP,EAA1DO,UAAWC,EAA+CR,EAA/CQ,YAAaC,EAAkCT,EAAlCS,MAAOC,EAA2BV,EAA3BU,UAAWC,EAAgBX,EAAhBW,YACnE,OAAQrI,EAAA9B,EAAA+B,cAAA,WACND,EAAA9B,EAAA+B,cAAA,UAAK2H,EAAL,IAAYI,GACZhI,EAAA9B,EAAA+B,cAAA,SAAIgI,GACJjI,EAAA9B,EAAA+B,cAAA,SAAIiI,GACJlI,EAAA9B,EAAA+B,cAAA,KAAGoD,MAAO,CAACiF,UAAW,WAAYD,GAClCrI,EAAA9B,EAAA+B,cAAA,cAASkI,EAAT,IAAiBC,OAMVG,EAAc,CAEzB,CAAEnI,MAAO,OAAQD,QAAS,KAE1B,CAAEC,MAAO,MAAOD,QAAS,IAAKkD,MAAO,CAAEpE,gBAAiB,SAExD,CACEmB,MAAO,eACPD,QAAS,IACTG,OAAQ,SAACoH,GAAD,OACN1H,EAAA9B,EAAA+B,cAAA,aAAA7B,OAAQsJ,EAAM,GAAK,gBAAa,gBAAhC,gBAAAtJ,OAAyDsJ,MAK7D,CACEtH,MAAO,aACPD,QAAS,GACTG,OAAQ,SAACoH,GAAD,OACN1H,EAAA9B,EAAA+B,cAAA,aAAA7B,OAAQwI,KAAKC,UAAUa,EAAIxJ,GAA3B,QAAAE,OAAoCsJ,EAAIc,EAAI,GAAK,SAAW,GAA5D,KAAApK,OACEsJ,EAAIc,EAAI,GAAK,QAAU,WAM7B,CACEpI,MAAO,UACPD,QAAS,GACTG,OAAQ,iBACN,sHACFD,MAAO,QAIUoI,mLAEjB,OACEzI,EAAA9B,EAAA+B,cAAA,OAAKsE,UAAU,WACbvE,EAAA9B,EAAA+B,cAAA,UACED,EAAA9B,EAAA+B,cAAA,QAAMmG,KAAK,MAAMC,aAAW,SAA5B,gBAEQ,IAHV,cAMArG,EAAA9B,EAAA+B,cAAA,gDACAD,EAAA9B,EAAA+B,cAAA,yCAC8BD,EAAA9B,EAAA+B,cAAA,KAAGqG,KA7FvC,uEA6FoC,eAE9BtG,EAAA9B,EAAA+B,cAAA,sCAC2BD,EAAA9B,EAAA+B,cAAA,KAAGqG,KAzFd,uDAyFW,eAC3BtG,EAAA9B,EAAA+B,cAAA,gGAIAD,EAAA9B,EAAA+B,cAAA,UACED,EAAA9B,EAAA+B,cAAA,0EACAD,EAAA9B,EAAA+B,cAAA,+FAIAD,EAAA9B,EAAA+B,cAAA,qIAKFD,EAAA9B,EAAA+B,cAAA,yFAIAD,EAAA9B,EAAA+B,cAAC6G,EAAD,CAAYvC,UAAW,QAASxE,KAAMoH,IACtCnH,EAAA9B,EAAA+B,cAAA,+EACAD,EAAA9B,EAAA+B,cAAC6G,EAAD,CAAYvC,UAAW,QAASxE,KAAMwH,EAAU5G,cAAc,IAC9DX,EAAA9B,EAAA+B,cAAA,wEACAD,EAAA9B,EAAA+B,cAAC6G,EAAD,CAAYvC,UAAW,QAASxE,KAAMwH,EAAUvG,QAASuH,IACzDvI,EAAA9B,EAAA+B,cAAA,8EACAD,EAAA9B,EAAA+B,cAAC6G,EAAD,CACEvC,UAAW,QACXxE,KAAMwH,EACNvG,QAASqG,IAEXrH,EAAA9B,EAAA+B,cAAA,6EACC,OACDD,EAAA9B,EAAA+B,cAAA,6EACC,OACDD,EAAA9B,EAAA+B,cAAA,8DACC,OACDD,EAAA9B,EAAA+B,cAAA,sEACAD,EAAA9B,EAAA+B,cAAC6G,EAAD,CAAYvC,UAAW,QAASxE,KAAM2I,EAAc1H,QAAS,CAC3D,CAAEZ,MAAO,IAAKD,QAAS,IAAKI,MAAM,GAClC,CAAEH,MAAO,IAAKD,QAAS,IAAKI,KAAM,OAClC,CAAEH,MAAO,IAAKD,QAAS,QAEzBH,EAAA9B,EAAA+B,cAAA,uDACAD,EAAA9B,EAAA+B,cAAC6G,EAAD,CAAYvC,UAAW,QAASxE,KAAM,KACtCC,EAAA9B,EAAA+B,cAAA,2DACAD,EAAA9B,EAAA+B,cAAC6G,EAAD,CAAYvC,UAAW,SAAUxE,KAAM,CAAC,CAAE4I,GAAI,UAC9C3I,EAAA9B,EAAA+B,cAAA,yDACAD,EAAA9B,EAAA+B,cAAC6G,EAAD,CAAYvC,UAAW,SAAUxE,KAAMwH,EAAUvG,SAAS,IAC1DhB,EAAA9B,EAAA+B,cAAA,2DACAD,EAAA9B,EAAA+B,cAAC6G,EAAD,CAAYvC,UAAW,SAAUxE,KAAMkH,EAAcjG,QAASyG,YAjEpCV,IAAMC,WC1FlC4B,EAAS,kBAAMC,OAAOC,SAASF,UCNrCG,IAASzI,ODSPN,EAAA9B,EAAA+B,cAACsG,EAAA,EAAD,CAAYyC,SAAS,KACrBhJ,EAAA9B,EAAA+B,cAACgJ,EAAA,EAAD,KACEjJ,EAAA9B,EAAA+B,cAACgJ,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWC,EAAMC,QAAST,IAC9C5I,EAAA9B,EAAA+B,cAACgJ,EAAA,EAAD,CAAOK,OAAK,EAACJ,KAAK,IAAIC,UAAWI,IACjCvJ,EAAA9B,EAAA+B,cAACgJ,EAAA,EAAD,CACEE,UAAW,kBACTnJ,EAAA9B,EAAA+B,cAAA,OAAKsE,UAAU,WACbvE,EAAA9B,EAAA+B,cAAA,UAAK,iBAAsB,UChBXuJ,SAASC,eAAe","file":"static/js/main.852c522e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nconst indexDataKey = \"'index'\";\n\ntype compareFn = (a: any, b: any) => number;\ntype sortDirection = \"asc\" | \"dsc\" | boolean | compareFn;\n\nconst defaultComparefn: compareFn = (a: any, b: any) => {\n  return `${a}`.localeCompare(`${b}`);\n};\n\nconst defaultTableStyle: React.CSSProperties = {\n  display: \"grid\",\n  gridTemplateColumns: \"\",\n  borderTop: \"1px solid black\",\n  borderRight: \"1px solid black\",\n  borderLeft: \"1px solid black\",\n  borderBottom: \"1px solid black\"\n};\n\nconst defaultCellStyle: React.CSSProperties = {\n  padding: \"8px 4px\",\n  borderBottom: \"1px solid black\",\n  borderTop: \"1px solid black\"\n};\n\nconst defaultHeaderStyle: React.CSSProperties = {\n  position: \"relative\",\n  backgroundColor: \"lightgray\",\n  fontWeight: \"bold\"\n};\n\nconst cssSortStyle: React.CSSProperties = {\n  border: \"3px solid black\",\n  borderWidth: \"0 2px 2px 0\",\n  position: \"absolute\",\n  padding: \"5px 3px 3px 5px\",\n  top: 6,\n  right: 6,\n  opacity: 0.5\n};\n\nconst cssSortSelected: React.CSSProperties = {\n  opacity: 1.0\n}\n\nconst cssSortAsc: React.CSSProperties = {\n  ...cssSortStyle,\n  transform: \"rotate(-135deg)\"\n};\n\nconst cssSortDsc: React.CSSProperties = {\n  ...cssSortStyle,\n  transform: \"rotate(45deg)\",\n  top: 12\n};\n\n/**\n * DataObj - any object that is string indexed.\n * @export\n * @interface DataObj\n */\nexport interface DataObj {\n  [index: string]: any;\n}\n\n/**\n * TableConfigHeader - properties of a NaiveTable header\n * @export\n * @interface TableConfigHeader\n */\nexport interface TableConfigHeader {\n  // this is the string label for the table header\n  label: string;\n  // this is the dataKey that is referenced on the data object when displaying this row\n  // if set to '' (empty string) the whole data object will be sent to the render function\n  dataKey?: string;\n  // a provided width, that defaults to 'auto'\n  width?: string;\n  // an optional render function, that defaults to a naive rendering function\n  render?: (data: any) => JSX.Element | string;\n  // sortability: typed true, false, 'asc' or 'dsc'\n  // true - enable the ability to sort this header\n  // asc & dsc - sort the header this\n  sort?: sortDirection;\n  // style: any specific styling that should be used when rendering the header\n  style?: React.CSSProperties;\n}\n\nconst defaultRenderFunc = (data: any) => <span>{`${data}`}</span>;\n\nconst defaultHeaders: TableConfigHeader = {\n  dataKey: \"\",\n  label: \"\",\n  width: \"auto\",\n  render: defaultRenderFunc,\n  sort: false\n};\n\n/**\n * TableConfigProps - properties of a NaiveTable Component.\n * Only data is required.\n * @export\n * @interface TableConfigProps\n */\nexport interface TableConfigProps {\n  data: DataObj[];\n  headers?: TableConfigHeader[] | false;\n  includeIndex?: boolean;\n  tableStyle?: React.CSSProperties;\n  cellStyle?: React.CSSProperties;\n  className?: string;\n}\n\ninterface TableConfigState {\n  sortIndex?: number;\n  sortDir: \"asc\" | \"dsc\";\n  headers: TableConfigHeader[];\n  includeIndex: boolean;\n  tableStyle: React.CSSProperties;\n  cellStyle: React.CSSProperties;\n}\n\nexport type NaiveTableProps = TableConfigProps;\n\nconst indexHeader: TableConfigHeader = {\n  dataKey: indexDataKey,\n  label: \"#\",\n  width: \"auto\",\n  render: defaultRenderFunc\n};\n\nconst inferHeadersFromData = (data: DataObj[]): TableConfigHeader[] => {\n  const paragon = data[0];\n  if (paragon) {\n    return Object.keys(paragon).map(key => {\n      const header: TableConfigHeader = {\n        ...defaultHeaders,\n        dataKey: key,\n        label: key\n      };\n      return header;\n    });\n  }\n  return [];\n};\n\n/**\n * The css to render the 'grid' value is calculted here.\n * For example, three default headers should return '1fr 1fr 1fr'\n * @param {TableConfigHeader[]} headers\n */\nconst headerColumnWidths = (headers: TableConfigHeader[]) =>\n  headers.reduce((acc, header) => `${acc} ${header.width || \"auto\"} `, \"\");\n\n// processSort will sort provided data according to the provided headers\nconst processSort = (data: DataObj[], headers: TableConfigHeader[], sortDir: \"asc\" | \"dsc\", sortIndex: number | undefined) => {\n  if (sortIndex === undefined) {\n    return data\n  }\n  const header = headers[sortIndex]\n  const { sort, dataKey } = header;\n  const comparison = (typeof sort === \"function\") ? sort : defaultComparefn\n  const key = dataKey || \"\";\n  const sortFn = (a: DataObj, b: DataObj): number => {\n    if (sortDir === \"asc\") {\n      return comparison(a[key], b[key]);\n    }\n    else {\n      return -comparison(a[key], b[key]);\n    }\n  };\n  return data.sort(sortFn)\n};\n\nconst inferInitialSort = (headers: TableConfigHeader[]): [(\"asc\" | \"dsc\")?, number?] => {\n  let currentIndex = -1\n  const getSort = (header: TableConfigHeader) => (header.sort === true && \"asc\") || (header.sort === \"asc\" && \"asc\") || (header.sort === \"dsc\" && \"dsc\") || undefined\n  const getIndex = (header: TableConfigHeader) => header.sort ? currentIndex : undefined\n  return headers.reduce(([dir, index], header) => {\n    currentIndex += 1\n    return [dir || getSort(header), index || getIndex(header)]\n  }, [undefined as \"asc\" | \"dsc\" | undefined, undefined as number | undefined])\n}\n\n/**\n * Creates the initial NaiveTable state from the initial props\n * @param {NaiveTableProps} props\n * @returns {TableConfigState}\n */\nconst buildInititalState = (props: NaiveTableProps): TableConfigState => {\n  // passed in options shadow the default options\n  const includeIndex = props.includeIndex || false;\n  const cellStyle = { ...defaultCellStyle, ...props.cellStyle };\n  const tableStyle = { ...defaultTableStyle, ...props.tableStyle };\n  // data must be provided. Otherwise if its falsey, it defaults to empty array (no data)\n  // TODO: check that data.length < 1000, and error otherwise\n  const data = props.data || [];\n  // if headers are not defined, infer from data keys\n  const incIndexHeader: TableConfigHeader[] = includeIndex ? [indexHeader] : [];\n  const incHeaders = props.headers ? props.headers : inferHeadersFromData(data);\n  const headers = [...incIndexHeader, ...incHeaders];\n  const [sortDirr, sortIndex] = inferInitialSort(headers)\n  const sortDir = sortDirr || \"asc\"\n  return {\n    headers,\n    includeIndex,\n    cellStyle,\n    tableStyle,\n    sortDir,\n    sortIndex\n  };\n};\n\n/**\n * NaiveTable - a dumb simple naive React data table component\n * @param {NaiveTableProps} props\n * @returns\n */\nexport const NaiveTable: React.FC<NaiveTableProps> = (\n  props: NaiveTableProps\n) => {\n  const initState = buildInititalState(props);\n  // whether the headers should be rendered at all\n  const shouldRenderHeaders = props.headers === false ? false : true\n  // whether the data rows should be rendered\n  const shouldRenderDatarows = true\n  // useState hook - rule of thumb is to call the useState hook early and once during execution\n  const [state, setState] = useState(initState);\n  // destructure the properties from state\n  const { headers, tableStyle, cellStyle, sortIndex, sortDir } = state;\n  // infers the grid widths of the headers (even if not rendering headers we need this)\n  const gridTemplateColumns = headerColumnWidths(headers);\n  // the gridStyle is injected into the table dynamically\n  const gridStyle = { ...tableStyle, gridTemplateColumns };\n  // renderHeader will create a <span> for the given header at the designated index\n  const renderHeader = (header: TableConfigHeader, index: number) => {\n    const { sort, label, style } = header;\n    const headerStyle = { ...defaultHeaderStyle, ...cellStyle, ...style };\n    const indexSelected = sortIndex === index\n    const cssSortSelectedAsc = indexSelected && sortDir === \"dsc\" ? cssSortSelected : {}\n    const cssSortSelectedDsc = indexSelected && sortDir === \"asc\" ? cssSortSelected : {}\n    const upArrow =\n      sort ? (\n        <i style={{ ...cssSortAsc, ...cssSortSelectedAsc }} />\n      ) : null\n    const downArrow =\n      sort ? (\n        <i style={{ ...cssSortDsc, ...cssSortSelectedDsc }} />\n      ) : null\n    // change creates the function called when a header sort is toggled\n    const change = (index: number) => () => {\n      const dir = (sortIndex === index && sortDir === \"asc\") ? \"dsc\" : \"asc\"\n      setState({ ...state, headers, sortIndex: index, sortDir: dir });\n    };\n    // if sort is not enabled, clicking should noop, else invoke change\n    const onClick = !sort ? () => null : change(index);\n    // here is the assembled header rendering\n    return (\n      <span key={index} style={headerStyle} onClick={onClick}>\n        {label} {upArrow} {downArrow}\n      </span>\n    );\n  };\n  // renderDataRow will create the <span> with the given data at the designated index,\n  // using the provided header\n  const renderDataRow = (dataObj: DataObj, rowIndex: number) => (\n    header: TableConfigHeader,\n    index: number\n  ) => {\n    const { dataKey, render } = header;\n    // if a data render function was specified, use that\n    const renderCell = render || defaultRenderFunc;\n    // if a datakey isn't provided\n    const dataVal: any = !dataKey\n      ? // supply the current row dataObject\n      dataObj\n      : // otherwise if the key is the special 'index' dataKey\n      dataKey === indexDataKey\n        ? // supply the offset row index\n        rowIndex + 1\n        : // otherwise supply the row data at the given dataKey\n        // emphasize: we do want return 'undefined' here if undefined\n        dataObj[dataKey];\n    return (\n      <span key={index} style={cellStyle}>\n        {/* extra spacing after rendering the cell */}\n        {renderCell(dataVal)}{\" \"}\n      </span>\n    );\n  };\n\n  const renderDataRows = (tableHeaders: TableConfigHeader[]) => (\n    tableData: DataObj,\n    indexr: number\n  ) => tableHeaders.map(renderDataRow(tableData, indexr));\n\n  const renderedHeaders = shouldRenderHeaders ? headers.map(renderHeader) : null\n  const renderedRows = shouldRenderDatarows ? processSort(props.data, headers, sortDir, sortIndex).map(renderDataRows(headers)) : null\n\n  return (\n    <div className={props.className || \"\"} style={gridStyle}>\n      {renderedHeaders}\n      {renderedRows}\n    </div>\n  );\n};\n","import React from \"react\";\n// tslint:disable-next-line: no-implicit-dependencies\nimport Highlight from \"react-highlight\";\n// tslint:disable-next-line: no-implicit-dependencies\nimport { Link } from \"react-router-dom\";\nimport packageJSON from '../../package.json'\nimport wwords from \"../content/home-content.json\";\nimport { DataObj, NaiveTable } from \"../NaiveTable\";\nconst words: { [index: string]: { [index: string]: string } } = wwords\n\ntype SupportedLangs = keyof typeof words;\nconst version = packageJSON.version\n\nconst blamDataRows = (headers: string[], nToGen: number) => {\n  let rows: DataObj[] = [];\n  for (let index = 0; index < nToGen; index++) {\n    const row: DataObj = {};\n    headers.forEach(header => {\n      row[header] = Math.random();\n    });\n    rows = [...rows, row];\n  }\n  return rows;\n};\n\nconst randomData = blamDataRows([\"foo\", \"bar\", \"baz\"], 5);\n// These are the supported languages\nconst DEFAULT_LANG = \"en\";\ninterface HomeScreenProps {\n  lang: SupportedLangs;\n}\n\nexport default class Home extends React.Component<HomeScreenProps> {\n  private readonly randomFilenames = ['copy', 'new-hot-startup', 'foobarbaz', 'blockchainz', 'stuff', 'wack-wack-wack', '1']\n  private randomFilename = this.randomFilenames[0]\n  constructor(props: HomeScreenProps) {\n    super(props);\n    const rand = Math.floor(Math.random() * this.randomFilenames.length)\n    this.randomFilename = this.randomFilenames[rand] || this.randomFilename\n    const { lang } = props;\n  }\n\n  public render() {\n    // this is the word render function\n    // it will display the text content in the given language or in english\n    // the red X means there is missing text content\n    const W = (input: string) => {\n      const display = words[DEFAULT_LANG][input] || \"\";\n      return `${display}` || \"❌\";\n      // return this.theseWords[input] || this.defaultWords[input] || \"❌\";\n    };\n    return (\n      <div className=\"page-content\">\n        <div className=\"wrapper\">\n          <h1><span role=\"img\" aria-label=\"Bento\">🍱</span> NaiveTable</h1>\n          <h2>\n            {W(\"w1\")} {W(\"w2\")} {W(\"w3\")}{\" \"}{`Array<T>`} {W(\"w7\")}\n            {W(\"w4\")}{\" \"}\n            <a href=\"https://reactjs.org/\">React</a> <a href=\"https://reactjs.org/docs/hooks-intro.html/\">(Hooks)</a>  {W(\"w8\")}</h2>\n\n          <span>\n            <h3>\n              v{version} -{\" \"}\n              <Link to=\"/test\">Tests</Link>-{\" \"}\n              <a href=\"https://github.com/untra/naivetable\">Github</a> -{\" \"}\n              <a href=\"https://www.npmjs.com/package/@untra/naivetable\">NPM</a> -{\" \"}\n              <a href=\"https://dashboard.cypress.io/#/projects/wrytfx/runs\">Cypress</a>\n            </h3>\n          </span>\n          <hr />\n          <div style={{\n            padding: '50px',\n            color: 'dark gray',\n            textAlign: 'center'\n          }}>\n            <h4>\n              <strong>NaiveTable</strong> {W(\"i1\")} <br />{\"(typescript type \"}\n              <code>{\"Array<T> of {[index: string]: any}\"}</code>\n              {\")\"}<br />\n\n\n              {W(\"i2a\")}\n              <code>{\" Array<T> \"}</code>\n              {W(\"i2b\")}<br />\n              {W(\"i2c\")}<br/><br/>\n              <code>{`<NaiveTable data={data} />`}</code>\n            </h4>\n          </div>\n          <Highlight className=\"tsx\">{\n            `// react-app-${this.randomFilename}.tsx\nimport React from \"react\";\nimport { NaiveTable } from \"@untra/naivetable\";\n// ${W(\"h0a\")}\nconst data = [${JSON.stringify(randomData[0], null, 2)}, ...];\n// ${W(\"h0b\")}\n<NaiveTable data={data} />`}\n          </Highlight>\n          <NaiveTable data={randomData} />\n        </div>\n      </div>\n    );\n  }\n}\n","/***\n * Naivetable Tests\n * MIT License\n * Made with 💙 by @untra\n * ---\n * tslint:disable-next-line: no-implicit-dependencies\n */\nimport React from \"react\";\nimport flatDataJSON from \"../content/fixtures/flat.json\"\nimport llanowarDataJSON from \"../content/fixtures/llanowar.json\";\nimport nameDataJSON from \"../content/fixtures/nameData.json\";\nimport styledHeadersJSON from \"../content/fixtures/styledHeaders.json\";\nimport varietyofDataTypesDataJSON from \"../content/fixtures/varietyOfTypesData.json\";\nimport { DataObj, NaiveTable, TableConfigHeader } from \"../NaiveTable\";\n\n// Hi friend 👋 thanks for reading my naivetable tests!\n// maybe you're on this github page?\n\nconst thisGithubPage =\n  \"https://github.com/untra/naivetable/blob/master/src/routes/test.tsx\";\n\n// If you are, then I want to know you are a talented and skilled engineer,\n// and it would certainly be a pleasure to shake your hand one day,\n// and tell you personally _just how cool you are_\n\n// While you're here you may also want to check out that cypress page:\nconst thatCypressPage = \"https://dashboard.cypress.io/#/projects/wrytfx/runs\";\n\n// redefine the data fixtures to accomodate prefered typings\n\nconst llanowarData: DataObj[] = llanowarDataJSON;\n\nconst varietyofDataTypesData: DataObj[] = varietyofDataTypesDataJSON;\n\nconst styledHeaders: TableConfigHeader[] = styledHeadersJSON;\n\nconst nameData: DataObj[] = nameDataJSON;\n\n// the secret sauce to display no headers and custom render:\n// use css and `dsiplay: none` for the header style\nconst mtgHeaders: TableConfigHeader[] = [{\n  label: \"\",\n  dataKey: \"\",\n  style: { display: 'none' },\n  render: (val: any) => {\n    const  { local_image, name } = val\n    return (<img width={250} height={345} alt={name} src={local_image} />)\n  }\n}, {\n  label: \"\",\n  dataKey: \"\",\n  style: { display: 'none' },\n  render: (val: any) => {\n    const { name, mana_cost, type_line, oracle_text, power, toughness, flavor_text } = val\n    return (<div>\n      <h4>{name} {mana_cost}</h4>\n      <p>{type_line}</p>\n      <p>{oracle_text}</p>\n      <p style={{fontStyle: 'italic'}}>{flavor_text}</p>\n      <strong>{power}/{toughness}</strong>\n    </div>)\n  }\n}]\n\n// complex headers with custom rendering\nexport const nameHeaders = [\n  // change the rendered header text with the 'label' parameter\n  { label: \"name\", dataKey: \"a\" },\n  // individually style each header cell with the 'style' parameter\n  { label: \"age\", dataKey: \"b\", style: { backgroundColor: \"pink\" } },\n  // provide a 'render' function to control how dataCells render for the column\n  {\n    label: \"grade status\",\n    dataKey: \"c\",\n    render: (val: number) => (\n      <h2>{`${val > 50 ? \"✅passing\" : \"❌failing\"} the class: ${val}`}</h2>\n    )\n  },\n  // use the 'dataKey' to control the input to the render function\n  // provide an empty string to instead call render with the entire dataObject provided\n  {\n    label: \"assessment\",\n    dataKey: \"\",\n    render: (val: any) => (\n      <h4>{`${JSON.stringify(val.a)} is ${val.c > 90 ? \"really\" : \"\"} ${\n        val.c > 50 ? \"smart\" : \"dumb\"\n        }`}</h4>\n    )\n  },\n  // you can have more headers than keys in your dataObjects, btw ;)\n  // you can also control the 'width' of the column (pass in 'fr' , defaults to 'auto')\n  {\n    label: \"comment\",\n    dataKey: \"\",\n    render: () =>\n      \"Lorem Ipsum this is the same comment rendered over and over again why won't @LILBTHEBASEDGOD tweet about about me?\",\n    width: \"4fr\"\n  }\n];\n\nexport default class Test extends React.Component {\n  public render() {\n    return (\n      <div className=\"wrapper\">\n        <h1>\n          <span role=\"img\" aria-label=\"Bento\">\n            🍱\n          </span>{\" \"}\n          NaiveTable\n        </h1>\n        <h2>Cypress Tests and React Hooks demo</h2>\n        <h3>\n          View this page and tests at <a href={thisGithubPage}>Github.com</a>\n        </h3>\n        <h3>\n          View the test results at <a href={thatCypressPage}>Cypress.io</a></h3>\n        <p>\n          This page is a demonstration of the NaiveTable component used in a\n          variety of ways:\n        </p>\n        <ul>\n          <li>It is the selection and input to a variety of cypress tests.</li>\n          <li>\n            View the chrome console to see statistics and reports of how the\n            examples render.\n          </li>\n          <li>\n            This is also a demonstration of the power of react-hooks, a\n            functional and clean approach to writing react components.\n          </li>\n        </ul>\n        <h4>\n          #1 It should be able to render a variety of different javascript data\n          types\n        </h4>\n        <NaiveTable className={\"test1\"} data={varietyofDataTypesData} />\n        <h4>#2 It should be able to render an index left adjacent of the data</h4>\n        <NaiveTable className={\"test2\"} data={nameData} includeIndex={true} />\n        <h4>#3 It should be able to render a table with custom headers</h4>\n        <NaiveTable className={\"test3\"} data={nameData} headers={nameHeaders} />\n        <h4>#4 It should be able to render individual styling on each header</h4>\n        <NaiveTable\n          className={\"test4\"}\n          data={nameData}\n          headers={styledHeaders}\n        />\n        <h4>#5 It should be able to render individual styling for the table</h4>\n        {\"TODO\"}\n        <h4>#6 It should be able to render individual styling for each cell</h4>\n        {\"TODO\"}\n        <h4>#7 It should be able to display sortable columns</h4>\n        {\"TODO\"}\n        <h4>#8 It should display sorted column data sorted correctly</h4>\n        <NaiveTable className={\"test8\"} data={flatDataJSON} headers={[\n          { label: 'a', dataKey: 'a', sort: true },\n          { label: 'b', dataKey: 'b', sort: \"asc\" },\n          { label: 'c', dataKey: 'c' }\n        ]} />\n        <h4>#9 It should be able to render empty data</h4>\n        <NaiveTable className={\"test9\"} data={[]} />\n        <h4>#10 It should be able to render a data of one</h4>\n        <NaiveTable className={\"test10\"} data={[{ of: \"one\" }]} />\n        <h4>#11 You don't have to render any headers at</h4>\n        <NaiveTable className={\"test11\"} data={nameData} headers={false} />\n        <h4>#12 You can render a Magic The Gathering card</h4>\n        <NaiveTable className={\"test11\"} data={llanowarData} headers={mtgHeaders} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n// tslint:disable-next-line: no-implicit-dependencies\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport home from \"./home\";\nimport test from \"./test\";\n\n// NOTE: see https://medium.com/@Dragonza/react-router-problem-with-gh-pages-c93a5e243819\n// for explanation of BrowserRouter hook-up\n\nconst reload = () => window.location.reload();\n\nexport default () => (\n  <HashRouter basename=\"/\">\n  <Switch>\n    <Route path=\"/test\" component={test} onEnter={reload} />\n    <Route exact path=\"/\" component={home} />\n    <Route\n      component={() => (\n        <div className=\"wrapper\">\n          <h1>{\"404 Not found\"}</h1>{\" \"}\n        </div>\n      )}\n    />\n    </Switch>\n  </HashRouter>\n);\n","import ReactDOM from \"react-dom\";\nimport routes from './routes'\n\n\nReactDOM.render(routes(), document.getElementById(\"root\"));"],"sourceRoot":""}