{"version":3,"sources":["NaiveTable.tsx","routes/home.tsx","routes/test.tsx","routes/index.tsx","index.tsx"],"names":["defaultComparefn","a","b","concat","localeCompare","defaultTableStyle","display","gridTemplateColumns","borderTop","borderRight","borderLeft","borderBottom","defaultCellStyle","padding","defaultHeaderStyle","position","backgroundColor","fontWeight","cssSortStyle","border","borderWidth","top","right","opacity","cssSortSelected","cssSortAsc","Object","objectSpread","transform","cssSortDsc","defaultRenderFunc","data","react_default","createElement","defaultHeaders","dataKey","label","width","render","sort","indexHeader","buildInititalState","props","includeIndex","cellStyle","tableStyle","incIndexHeader","incHeaders","headers","paragon","keys","map","key","inferHeadersFromData","toConsumableArray","_inferInitialSort","currentIndex","getSort","header","undefined","getIndex","reduce","_ref","_ref2","slicedToArray","dir","index","inferInitialSort","_inferInitialSort2","sortDir","sortIndex","NaiveTable","tableHeaders","initState","shouldRenderHeaders","_useState","useState","_useState2","state","setState","acc","headerColumnWidths","gridStyle","renderedHeaders","style","headerStyle","indexSelected","cssSortSelectedAsc","cssSortSelectedDsc","upArrow","downArrow","onClick","change","renderedRows","comparison","processSort","tableData","indexr","dataObj","rowIndex","renderCell","dataVal","className","words","wwords","version","packageJSON","randomData","nToGen","rows","_loop","row","forEach","Math","random","blamDataRows","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomFilenames","randomFilename","rand","floor","length","lang","W","input","role","aria-label","href","react_router_dom","to","color","textAlign","react_highlight_default","JSON","stringify","NaiveTable_NaiveTable","React","Component","llanowarData","llanowarDataJSON","varietyofDataTypesData","varietyofDataTypesDataJSON","styledHeaders","styledHeadersJSON","nameData","nameDataJSON","mtgHeaders","val","local_image","name","height","alt","src","mana_cost","type_line","oracle_text","power","toughness","flavor_text","nameHeaders","c","Test","flatDataJSON","of","reload","window","location","ReactDOM","basename","react_router","path","component","test","onEnter","exact","home","document","getElementById"],"mappings":"oPAMMA,EAA8B,SAACC,EAAQC,GAC3C,MAAO,GAAAC,OAAGF,GAAIG,cAAP,GAAAD,OAAwBD,KAG3BG,EAAyC,CAC7CC,QAAS,OACTC,oBAAqB,GACrBC,UAAW,kBACXC,YAAa,kBACbC,WAAY,kBACZC,aAAc,mBAGVC,EAAwC,CAC5CC,QAAS,UACTF,aAAc,kBACdH,UAAW,mBAGPM,EAA0C,CAC9CC,SAAU,WACVC,gBAAiB,YACjBC,WAAY,QAGRC,EAAoC,CACxCC,OAAQ,kBACRC,YAAa,cACbL,SAAU,WACVF,QAAS,kBACTQ,IAAK,EACLC,MAAO,EACPC,QAAS,IAGLC,EAAuC,CAC3CD,QAAS,GAGLE,EAA+BC,OAAAC,EAAA,EAAAD,CAAA,GAChCR,EADgC,CAEnCU,UAAW,oBAGPC,EAA+BH,OAAAC,EAAA,EAAAD,CAAA,GAChCR,EADgC,CAEnCU,UAAW,gBACXP,IAAK,KAmCDS,EAAoB,SAACC,GAAD,OAAeC,EAAA/B,EAAAgC,cAAA,eAAA9B,OAAU4B,KAE7CG,EAAoC,CACxCC,QAAS,GACTC,MAAO,GACPC,MAAO,OACPC,OAAQR,EACRS,MAAM,GA6BFC,EAAiC,CACrCL,QA5HmB,UA6HnBC,MAAO,IACPC,MAAO,OACPC,OAAQR,GA6DJW,EAAqB,SAACC,GAE1B,IAAMC,EAAeD,EAAMC,eAAgB,EACrCC,EAASlB,OAAAC,EAAA,EAAAD,CAAA,GAAQd,EAAqB8B,EAAME,WAC5CC,EAAUnB,OAAAC,EAAA,EAAAD,CAAA,GAAQrB,EAAsBqC,EAAMG,YAG9Cd,EAAOW,EAAMX,MAAQ,GAErBe,EAAsCH,EAAe,CAACH,GAAe,GACrEO,EAAaL,EAAMM,QAAUN,EAAMM,QApEd,SAACjB,GAC5B,IAAMkB,EAAUlB,EAAK,GACrB,OAAIkB,EACKvB,OAAOwB,KAAKD,GAASE,IAAI,SAAAC,GAM9B,OAL+B1B,OAAAC,EAAA,EAAAD,CAAA,GAC1BQ,EAD0B,CAE7BC,QAASiB,EACThB,MAAOgB,MAKN,GAwD4CC,CAAqBtB,GAClEiB,EAAO,GAAA7C,OAAO2C,EAAPpB,OAAA4B,EAAA,EAAA5B,CAA0BqB,IAXgCQ,EAfhD,SAACP,GACxB,IAAIQ,GAAgB,EACdC,EAAU,SAACC,GAAD,QAAgD,IAAhBA,EAAOnB,KAAiB,MAA2B,QAAhBmB,EAAOnB,MAAkB,QAA2B,QAAhBmB,EAAOnB,MAAkB,YAAUoB,GACpJC,EAAW,SAACF,GAAD,OAA+BA,EAAOnB,KAAOiB,OAAeG,GAC7E,OAAOX,EAAQa,OAAO,SAAAC,EAAeJ,GAAW,IAAAK,EAAArC,OAAAsC,EAAA,EAAAtC,CAAAoC,EAAA,GAAxBG,EAAwBF,EAAA,GAAnBG,EAAmBH,EAAA,GAE9C,OADAP,GAAgB,EACT,CAACS,GAAOR,EAAQC,GAASQ,GAASN,EAASF,KACjD,MAACC,OAAwCA,IAoBdQ,CAAiBnB,GAZwBoB,EAAA1C,OAAAsC,EAAA,EAAAtC,CAAA6B,EAAA,GAcvE,MAAO,CACLP,UACAL,eACAC,YACAC,aACAwB,QAnBqED,EAAA,IAa3C,MAO1BE,UApBqEF,EAAA,KA6B5DG,EAAwC,SACnD7B,GAEA,IAsEwB8B,EAtElBC,EAAYhC,EAAmBC,GAE/BgC,GAAwC,IAAlBhC,EAAMM,QAH/B2B,EAOuBC,mBAASH,GAPhCI,EAAAnD,OAAAsC,EAAA,EAAAtC,CAAAiD,EAAA,GAOIG,EAPJD,EAAA,GAOWE,EAPXF,EAAA,GASK7B,EAAuD8B,EAAvD9B,QAASH,EAA8CiC,EAA9CjC,WAAYD,EAAkCkC,EAAlClC,UAAW0B,EAAuBQ,EAAvBR,UAAWD,EAAYS,EAAZT,QAE7C9D,EAhFmB,SAACyC,GAAD,OACzBA,EAAQa,OAAO,SAACmB,EAAKtB,GAAN,SAAAvD,OAAoB6E,EAApB,KAAA7E,OAA2BuD,EAAOrB,OAAS,OAA3C,MAAsD,IA+EzC4C,CAAmBjC,GAEzCkC,EAASxD,OAAAC,EAAA,EAAAD,CAAA,GAAQmB,EAAR,CAAoBtC,wBA+D7B4E,EAAkBT,EAAsB1B,EAAQG,IA7DjC,SAACO,EAA2BQ,GAAkB,IACzD3B,EAAuBmB,EAAvBnB,KAAMH,EAAiBsB,EAAjBtB,MAAOgD,EAAU1B,EAAV0B,MACfC,EAAW3D,OAAAC,EAAA,EAAAD,CAAA,GAAQZ,EAAuB8B,EAAcwC,GACxDE,EAAgBhB,IAAcJ,EAC9BqB,EAAqBD,GAA6B,QAAZjB,EAAoB7C,EAAkB,GAC5EgE,EAAqBF,GAA6B,QAAZjB,EAAoB7C,EAAkB,GAC5EiE,EACJlD,EACEP,EAAA/B,EAAAgC,cAAA,KAAGmD,MAAK1D,OAAAC,EAAA,EAAAD,CAAA,GAAMD,EAAe8D,KAC3B,KACAG,EACJnD,EACEP,EAAA/B,EAAAgC,cAAA,KAAGmD,MAAK1D,OAAAC,EAAA,EAAAD,CAAA,GAAMG,EAAe2D,KAC3B,KAOAG,EAAWpD,EALF,SAAC2B,GAAD,OAAmB,WAChC,IAAMD,EAAOK,IAAcJ,GAAqB,QAAZG,EAAqB,MAAQ,MACjEU,EAASrD,OAAAC,EAAA,EAAAD,CAAA,GAAKoD,EAAN,CAAa9B,UAASsB,UAAWJ,EAAOG,QAASJ,MAGtB2B,CAAO1B,GAApB,kBAAM,MAE9B,OACElC,EAAA/B,EAAAgC,cAAA,QAAMmB,IAAKc,EAAOkB,MAAOC,EAAaM,QAASA,GAC5CvD,EADH,IACWqD,EADX,IACqBC,KAqCiD,KACpEG,EA9IY,SAAC9D,EAAiBiB,EAA8BqB,EAAwBC,GAC1F,QAAkBX,IAAdW,EACF,OAAOvC,EAET,IAAM2B,EAASV,EAAQsB,GACf/B,EAAkBmB,EAAlBnB,KAAMJ,EAAYuB,EAAZvB,QACR2D,EAA8B,oBAATvD,EAAuBA,EAAOvC,EACnDoD,EAAMjB,GAAW,GASvB,OAAOJ,EAAKQ,KARG,SAACtC,EAAYC,GAC1B,MAAgB,QAAZmE,EACKyB,EAAW7F,EAAEmD,GAAMlD,EAAEkD,KAGpB0C,EAAW7F,EAAEmD,GAAMlD,EAAEkD,MAiIW2C,CAAYrD,EAAMX,KAAMiB,EAASqB,EAASC,GAAWnB,KANzEqB,EAM4FxB,EANtD,SAC5DgD,EACAC,GAF4D,OAGzDzB,EAAarB,KA7BK+C,EA6BaF,EA7BKG,EA6BMF,EA7Be,SAC5DvC,EACAQ,GACG,IACK/B,EAAoBuB,EAApBvB,QAEFiE,EAFsB1C,EAAXpB,QAEYR,EAEvBuE,EAAgBlE,EAhRL,YAoRfA,EAEEgE,EAAW,EAGXD,EAAQ/D,GAPV+D,EAQF,OACElE,EAAA/B,EAAAgC,cAAA,QAAMmB,IAAKc,EAAOkB,MAAOxC,GAEtBwD,EAAWC,GAAU,QArBN,IAACH,EAAkBC,KAkCzC,OACEnE,EAAA/B,EAAAgC,cAAA,OAAKqE,UAAW5D,EAAM4D,WAAa,GAAIlB,MAAOF,GAC3CC,EACAU,ICtSDU,EAA0DC,EAG1DC,EAAUC,EAAYD,QActBE,EAZe,SAAC3D,EAAmB4D,GAEvC,IADA,IAAIC,EAAkB,GADoCC,EAAA,SAEjD5C,GACP,IAAM6C,EAAe,GACrB/D,EAAQgE,QAAQ,SAAAtD,GACdqD,EAAIrD,GAAUuD,KAAKC,WAErBL,EAAI,GAAA1G,OAAAuB,OAAA4B,EAAA,EAAA5B,CAAOmF,GAAP,CAAaE,KALV7C,EAAQ,EAAGA,EAAQ0C,EAAQ1C,IAAS4C,IAO7C,OAAOD,EAGUM,CAAa,CAAC,MAAO,MAAO,OAAQ,GAOlCC,cAGnB,SAAAA,EAAY1E,GAAwB,IAAA2E,EAAA3F,OAAA4F,EAAA,EAAA5F,CAAA6F,KAAAH,IAClCC,EAAA3F,OAAA8F,EAAA,EAAA9F,CAAA6F,KAAA7F,OAAA+F,EAAA,EAAA/F,CAAA0F,GAAAM,KAAAH,KAAM7E,KAHSiF,gBAAkB,CAAC,OAAQ,kBAAmB,YAAa,cAAe,QAAS,iBAAkB,KAElFN,EAD5BO,eAAiBP,EAAKM,gBAAgB,GAG5C,IAAME,EAAOZ,KAAKa,MAAMb,KAAKC,SAAWG,EAAKM,gBAAgBI,QAC7DV,EAAKO,eAAiBP,EAAKM,gBAAgBE,IAASR,EAAKO,eACxClF,EAATsF,KAJ0B,OAAAX,wEAWlC,IAAMY,EAAI,SAACC,GACT,IAAM5H,EAAUiG,EAAK,GAAe2B,IAAU,GAC9C,MAAO,GAAA/H,OAAGG,IAAa,UAGzB,OACE0B,EAAA/B,EAAAgC,cAAA,OAAKqE,UAAU,gBACbtE,EAAA/B,EAAAgC,cAAA,OAAKqE,UAAU,WACbtE,EAAA/B,EAAAgC,cAAA,UAAID,EAAA/B,EAAAgC,cAAA,QAAMkG,KAAK,MAAMC,aAAW,SAA5B,gBAAJ,eACApG,EAAA/B,EAAAgC,cAAA,UACGgG,EAAE,MADL,IACaA,EAAE,MADf,IACuBA,EAAE,MAAO,IADhC,eACkDA,EAAE,MACjDA,EAAE,MAAO,IACVjG,EAAA/B,EAAAgC,cAAA,KAAGoG,KAAK,wBAAR,SAHF,IAG2CrG,EAAA/B,EAAAgC,cAAA,KAAGoG,KAAK,8CAAR,WAH3C,KAG8GJ,EAAE,OAEhHjG,EAAA/B,EAAAgC,cAAA,YACED,EAAA/B,EAAAgC,cAAA,cACIwE,EADJ,KACe,IACbzE,EAAA/B,EAAAgC,cAACqG,EAAA,EAAD,CAAMC,GAAG,SAAT,SAFF,IAEiC,IAC/BvG,EAAA/B,EAAAgC,cAAA,KAAGoG,KAAK,uCAAR,UAHF,KAG6D,IAC3DrG,EAAA/B,EAAAgC,cAAA,KAAGoG,KAAK,mDAAR,OAJF,KAIsE,IACpErG,EAAA/B,EAAAgC,cAAA,KAAGoG,KAAK,uDAAR,aAGJrG,EAAA/B,EAAAgC,cAAA,WACAD,EAAA/B,EAAAgC,cAAA,OAAKmD,MAAO,CACVvE,QAAS,OACT2H,MAAO,YACPC,UAAW,WAEXzG,EAAA/B,EAAAgC,cAAA,UACED,EAAA/B,EAAAgC,cAAA,4BADF,IAC+BgG,EAAE,MADjC,IACwCjG,EAAA/B,EAAAgC,cAAA,WAAO,oBAC7CD,EAAA/B,EAAAgC,cAAA,YAAO,sCACN,IAAID,EAAA/B,EAAAgC,cAAA,WAGJgG,EAAE,OACHjG,EAAA/B,EAAAgC,cAAA,YAAO,cACNgG,EAAE,OAAOjG,EAAA/B,EAAAgC,cAAA,WACTgG,EAAE,OAAOjG,EAAA/B,EAAAgC,cAAA,WAAKD,EAAA/B,EAAAgC,cAAA,WACfD,EAAA/B,EAAAgC,cAAA,4CAGJD,EAAA/B,EAAAgC,cAACyG,EAAAzI,EAAD,CAAWqG,UAAU,OAArB,gBAAAnG,OACkBoH,KAAKK,eADvB,0FAAAzH,OAIL8H,EAAE,OAJG,oBAAA9H,OAKMwI,KAAKC,UAAUjC,EAAW,GAAI,KAAM,GAL1C,gBAAAxG,OAML8H,EAAE,OANG,iCASAjG,EAAA/B,EAAAgC,cAAC4G,EAAD,CAAY9G,KAAM4E,aAjEMmC,IAAMC,mDCFlCC,EAA0BC,EAE1BC,EAAoCC,EAEpCC,EAAqCC,EAErCC,EAAsBC,EAItBC,EAAkC,CAAC,CACvCpH,MAAO,GACPD,QAAS,GACTiD,MAAO,CAAE9E,QAAS,QAClBgC,OAAQ,SAACmH,GAAa,IACXC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACtB,OAAQ3H,EAAA/B,EAAAgC,cAAA,OAAKI,MAAO,IAAKuH,OAAQ,IAAKC,IAAKF,EAAMG,IAAKJ,MAEvD,CACDtH,MAAO,GACPD,QAAS,GACTiD,MAAO,CAAE9E,QAAS,QAClBgC,OAAQ,SAACmH,GAAa,IACZE,EAA2EF,EAA3EE,KAAMI,EAAqEN,EAArEM,UAAWC,EAA0DP,EAA1DO,UAAWC,EAA+CR,EAA/CQ,YAAaC,EAAkCT,EAAlCS,MAAOC,EAA2BV,EAA3BU,UAAWC,EAAgBX,EAAhBW,YACnE,OAAQpI,EAAA/B,EAAAgC,cAAA,WACND,EAAA/B,EAAAgC,cAAA,UAAK0H,EAAL,IAAYI,GACZ/H,EAAA/B,EAAAgC,cAAA,SAAI+H,GACJhI,EAAA/B,EAAAgC,cAAA,SAAIgI,GACJjI,EAAA/B,EAAAgC,cAAA,SAAImI,GACJpI,EAAA/B,EAAAgC,cAAA,cAASiI,EAAT,IAAiBC,OAMVE,EAAc,CAEzB,CAAEjI,MAAO,OAAQD,QAAS,KAE1B,CAAEC,MAAO,MAAOD,QAAS,IAAKiD,MAAO,CAAEpE,gBAAiB,SAExD,CACEoB,MAAO,eACPD,QAAS,IACTG,OAAQ,SAACmH,GAAD,OACNzH,EAAA/B,EAAAgC,cAAA,aAAA9B,OAAQsJ,EAAM,GAAK,gBAAa,gBAAhC,gBAAAtJ,OAAyDsJ,MAK7D,CACErH,MAAO,aACPD,QAAS,GACTG,OAAQ,SAACmH,GAAD,OACNzH,EAAA/B,EAAAgC,cAAA,aAAA9B,OAAQwI,KAAKC,UAAUa,EAAIxJ,GAA3B,QAAAE,OAAoCsJ,EAAIa,EAAI,GAAK,SAAW,GAA5D,KAAAnK,OACEsJ,EAAIa,EAAI,GAAK,QAAU,WAM7B,CACElI,MAAO,UACPD,QAAS,GACTG,OAAQ,iBACN,sHACFD,MAAO,QAIUkI,mLAEjB,OACEvI,EAAA/B,EAAAgC,cAAA,OAAKqE,UAAU,WACbtE,EAAA/B,EAAAgC,cAAA,UACED,EAAA/B,EAAAgC,cAAA,QAAMkG,KAAK,MAAMC,aAAW,SAA5B,gBAEQ,IAHV,cAMApG,EAAA/B,EAAAgC,cAAA,gDACAD,EAAA/B,EAAAgC,cAAA,yCAC8BD,EAAA/B,EAAAgC,cAAA,KAAGoG,KA7FvC,uEA6FoC,eAE9BrG,EAAA/B,EAAAgC,cAAA,sCAC2BD,EAAA/B,EAAAgC,cAAA,KAAGoG,KAzFd,uDAyFW,eAC3BrG,EAAA/B,EAAAgC,cAAA,gGAIAD,EAAA/B,EAAAgC,cAAA,UACED,EAAA/B,EAAAgC,cAAA,0EACAD,EAAA/B,EAAAgC,cAAA,+FAIAD,EAAA/B,EAAAgC,cAAA,qIAKFD,EAAA/B,EAAAgC,cAAA,yFAIAD,EAAA/B,EAAAgC,cAAC4G,EAAD,CAAYvC,UAAW,QAASvE,KAAMmH,IACtClH,EAAA/B,EAAAgC,cAAA,+EACAD,EAAA/B,EAAAgC,cAAC4G,EAAD,CAAYvC,UAAW,QAASvE,KAAMuH,EAAU3G,cAAc,IAC9DX,EAAA/B,EAAAgC,cAAA,wEACAD,EAAA/B,EAAAgC,cAAC4G,EAAD,CAAYvC,UAAW,QAASvE,KAAMuH,EAAUtG,QAASqH,IACzDrI,EAAA/B,EAAAgC,cAAA,8EACAD,EAAA/B,EAAAgC,cAAC4G,EAAD,CACEvC,UAAW,QACXvE,KAAMuH,EACNtG,QAASoG,IAEXpH,EAAA/B,EAAAgC,cAAA,6EACC,OACDD,EAAA/B,EAAAgC,cAAA,6EACC,OACDD,EAAA/B,EAAAgC,cAAA,8DACC,OACDD,EAAA/B,EAAAgC,cAAA,sEACAD,EAAA/B,EAAAgC,cAAC4G,EAAD,CAAYvC,UAAW,QAASvE,KAAMyI,EAAcxH,QAAS,CAC3D,CAAEZ,MAAO,IAAKD,QAAS,IAAKI,MAAM,GAClC,CAAEH,MAAO,IAAKD,QAAS,IAAKI,KAAM,OAClC,CAAEH,MAAO,IAAKD,QAAS,QAEzBH,EAAA/B,EAAAgC,cAAA,uDACAD,EAAA/B,EAAAgC,cAAC4G,EAAD,CAAYvC,UAAW,QAASvE,KAAM,KACtCC,EAAA/B,EAAAgC,cAAA,2DACAD,EAAA/B,EAAAgC,cAAC4G,EAAD,CAAYvC,UAAW,SAAUvE,KAAM,CAAC,CAAE0I,GAAI,UAC9CzI,EAAA/B,EAAAgC,cAAA,yDACAD,EAAA/B,EAAAgC,cAAC4G,EAAD,CAAYvC,UAAW,SAAUvE,KAAMuH,EAAUtG,SAAS,IAC1DhB,EAAA/B,EAAAgC,cAAA,2DACAD,EAAA/B,EAAAgC,cAAC4G,EAAD,CAAYvC,UAAW,SAAUvE,KAAMiH,EAAchG,QAASwG,YAjEpCV,IAAMC,WC1FlC2B,EAAS,kBAAMC,OAAOC,SAASF,UCNrCG,IAASvI,ODSPN,EAAA/B,EAAAgC,cAACqG,EAAA,EAAD,CAAYwC,SAAS,KACrB9I,EAAA/B,EAAAgC,cAAC8I,EAAA,EAAD,KACE/I,EAAA/B,EAAAgC,cAAC8I,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWC,EAAMC,QAAST,IAC9C1I,EAAA/B,EAAAgC,cAAC8I,EAAA,EAAD,CAAOK,OAAK,EAACJ,KAAK,IAAIC,UAAWI,IACjCrJ,EAAA/B,EAAAgC,cAAC8I,EAAA,EAAD,CACEE,UAAW,kBACTjJ,EAAA/B,EAAAgC,cAAA,OAAKqE,UAAU,WACbtE,EAAA/B,EAAAgC,cAAA,UAAK,iBAAsB,UChBXqJ,SAASC,eAAe","file":"static/js/main.44fc1efa.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nconst indexDataKey = \"'index'\";\r\n\r\ntype compareFn = (a: any, b: any) => number;\r\ntype sortDirection = \"asc\" | \"dsc\" | boolean | compareFn;\r\n\r\nconst defaultComparefn: compareFn = (a: any, b: any) => {\r\n  return `${a}`.localeCompare(`${b}`);\r\n};\r\n\r\nconst defaultTableStyle: React.CSSProperties = {\r\n  display: \"grid\",\r\n  gridTemplateColumns: \"\",\r\n  borderTop: \"1px solid black\",\r\n  borderRight: \"1px solid black\",\r\n  borderLeft: \"1px solid black\",\r\n  borderBottom: \"1px solid black\"\r\n};\r\n\r\nconst defaultCellStyle: React.CSSProperties = {\r\n  padding: \"8px 4px\",\r\n  borderBottom: \"1px solid black\",\r\n  borderTop: \"1px solid black\"\r\n};\r\n\r\nconst defaultHeaderStyle: React.CSSProperties = {\r\n  position: \"relative\",\r\n  backgroundColor: \"lightgray\",\r\n  fontWeight: \"bold\"\r\n};\r\n\r\nconst cssSortStyle: React.CSSProperties = {\r\n  border: \"3px solid black\",\r\n  borderWidth: \"0 2px 2px 0\",\r\n  position: \"absolute\",\r\n  padding: \"5px 3px 3px 5px\",\r\n  top: 6,\r\n  right: 6,\r\n  opacity: 0.5\r\n};\r\n\r\nconst cssSortSelected: React.CSSProperties = {\r\n  opacity: 1.0\r\n}\r\n\r\nconst cssSortAsc: React.CSSProperties = {\r\n  ...cssSortStyle,\r\n  transform: \"rotate(-135deg)\"\r\n};\r\n\r\nconst cssSortDsc: React.CSSProperties = {\r\n  ...cssSortStyle,\r\n  transform: \"rotate(45deg)\",\r\n  top: 12\r\n};\r\n\r\n/**\r\n * DataObj - any object that is string indexed.\r\n * @export\r\n * @interface DataObj\r\n */\r\nexport interface DataObj {\r\n  [index: string]: any;\r\n}\r\n\r\n/**\r\n * TableConfigHeader - proprties of a NaiveTable header\r\n * @export\r\n * @interface TableConfigHeader\r\n */\r\nexport interface TableConfigHeader {\r\n  // this is the string label for the table header\r\n  label: string;\r\n  // this is the dataKey that is referenced on the data object when displaying this row\r\n  // if set to '' (empty string) the whole data object will be sent to the render function\r\n  dataKey?: string;\r\n  // a provided width, that defaults to 'auto'\r\n  width?: string;\r\n  // an optional render function, that defaults to a naive rendering function\r\n  render?: (data: any) => JSX.Element | string;\r\n  // sortability: typed true, false, 'asc' or 'dsc'\r\n  // true - enable the ability to sort this header\r\n  // asc & dsc - sort the header this\r\n  sort?: sortDirection;\r\n  // style: any specific styling that should be used when rendering the header\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst defaultRenderFunc = (data: any) => <span>{`${data}`}</span>;\r\n\r\nconst defaultHeaders: TableConfigHeader = {\r\n  dataKey: \"\",\r\n  label: \"\",\r\n  width: \"auto\",\r\n  render: defaultRenderFunc,\r\n  sort: false\r\n};\r\n\r\n/**\r\n * TableConfigProps - properties of a NaiveTable Component.\r\n * Only data is required.\r\n * @export\r\n * @interface TableConfigProps\r\n */\r\nexport interface TableConfigProps {\r\n  data: DataObj[];\r\n  headers?: TableConfigHeader[] | false;\r\n  includeIndex?: boolean;\r\n  tableStyle?: React.CSSProperties;\r\n  cellStyle?: React.CSSProperties;\r\n  className?: string;\r\n}\r\n\r\ninterface TableConfigState {\r\n  sortIndex?: number;\r\n  sortDir: \"asc\" | \"dsc\";\r\n  headers: TableConfigHeader[];\r\n  includeIndex: boolean;\r\n  tableStyle: React.CSSProperties;\r\n  cellStyle: React.CSSProperties;\r\n}\r\n\r\nexport type NaiveTableProps = TableConfigProps;\r\n\r\nconst indexHeader: TableConfigHeader = {\r\n  dataKey: indexDataKey,\r\n  label: \"#\",\r\n  width: \"auto\",\r\n  render: defaultRenderFunc\r\n};\r\n\r\nconst inferHeadersFromData = (data: DataObj[]): TableConfigHeader[] => {\r\n  const paragon = data[0];\r\n  if (paragon) {\r\n    return Object.keys(paragon).map(key => {\r\n      const header: TableConfigHeader = {\r\n        ...defaultHeaders,\r\n        dataKey: key,\r\n        label: key\r\n      };\r\n      return header;\r\n    });\r\n  }\r\n  return [];\r\n};\r\n\r\n/**\r\n * The css to render the 'grid' value is calculted here.\r\n * For example, three default headers should return '1fr 1fr 1fr'\r\n * @param {TableConfigHeader[]} headers\r\n */\r\nconst headerColumnWidths = (headers: TableConfigHeader[]) =>\r\n  headers.reduce((acc, header) => `${acc} ${header.width || \"auto\"} `, \"\");\r\n\r\n// processSort will sort provided data according to the provided headers\r\nconst processSort = (data: DataObj[], headers: TableConfigHeader[], sortDir: \"asc\" | \"dsc\", sortIndex: number | undefined) => {\r\n  if (sortIndex === undefined) {\r\n    return data\r\n  }\r\n  const header = headers[sortIndex]\r\n  const { sort, dataKey } = header;\r\n  const comparison = (typeof sort === \"function\") ? sort : defaultComparefn\r\n  const key = dataKey || \"\";\r\n  const sortFn = (a: DataObj, b: DataObj): number => {\r\n    if (sortDir === \"asc\") {\r\n      return comparison(a[key], b[key]);\r\n    }\r\n    else {\r\n      return -comparison(a[key], b[key]);\r\n    }\r\n  };\r\n  return data.sort(sortFn)\r\n};\r\n\r\nconst inferInitialSort = (headers: TableConfigHeader[]): [(\"asc\" | \"dsc\")?, number?] => {\r\n  let currentIndex = -1\r\n  const getSort = (header: TableConfigHeader) => (header.sort === true && \"asc\") || (header.sort === \"asc\" && \"asc\") || (header.sort === \"dsc\" && \"dsc\") || undefined\r\n  const getIndex = (header: TableConfigHeader) => header.sort ? currentIndex : undefined\r\n  return headers.reduce(([dir, index], header) => {\r\n    currentIndex += 1\r\n    return [dir || getSort(header), index || getIndex(header)]\r\n  }, [undefined as \"asc\" | \"dsc\" | undefined, undefined as number | undefined])\r\n}\r\n\r\n/**\r\n * Creates the initial NaiveTable state from the initial props\r\n * @param {NaiveTableProps} props\r\n * @returns {TableConfigState}\r\n */\r\nconst buildInititalState = (props: NaiveTableProps): TableConfigState => {\r\n  // passed in options shadow the default options\r\n  const includeIndex = props.includeIndex || false;\r\n  const cellStyle = { ...defaultCellStyle, ...props.cellStyle };\r\n  const tableStyle = { ...defaultTableStyle, ...props.tableStyle };\r\n  // data must be provided. Otherwise if its falsey, it defaults to empty array (no data)\r\n  // TODO: check that data.length < 1000, and error otherwise\r\n  const data = props.data || [];\r\n  // if headers are not defined, infer from data keys\r\n  const incIndexHeader: TableConfigHeader[] = includeIndex ? [indexHeader] : [];\r\n  const incHeaders = props.headers ? props.headers : inferHeadersFromData(data);\r\n  const headers = [...incIndexHeader, ...incHeaders];\r\n  const [sortDirr, sortIndex] = inferInitialSort(headers)\r\n  const sortDir = sortDirr || \"asc\"\r\n  return {\r\n    headers,\r\n    includeIndex,\r\n    cellStyle,\r\n    tableStyle,\r\n    sortDir,\r\n    sortIndex\r\n  };\r\n};\r\n\r\n/**\r\n * NaiveTable - a dumb simple naive React data table component\r\n * @param {NaiveTableProps} props\r\n * @returns\r\n */\r\nexport const NaiveTable: React.FC<NaiveTableProps> = (\r\n  props: NaiveTableProps\r\n) => {\r\n  const initState = buildInititalState(props);\r\n  // whether the headers should be rendered at all\r\n  const shouldRenderHeaders = props.headers === false ? false : true\r\n  // whether the data rows should be rendered\r\n  const shouldRenderDatarows = true\r\n  // useState hook - rule of thumb is to call the useState hook early and once during execution\r\n  const [state, setState] = useState(initState);\r\n  // destructure the properties from state\r\n  const { headers, tableStyle, cellStyle, sortIndex, sortDir } = state;\r\n  // infers the grid widths of the headers (even if not rendering headers we need this)\r\n  const gridTemplateColumns = headerColumnWidths(headers);\r\n  // the gridStyle is injected into the table dynamically\r\n  const gridStyle = { ...tableStyle, gridTemplateColumns };\r\n  // renderHeader will create a <span> for the given header at the designated index\r\n  const renderHeader = (header: TableConfigHeader, index: number) => {\r\n    const { sort, label, style } = header;\r\n    const headerStyle = { ...defaultHeaderStyle, ...cellStyle, ...style };\r\n    const indexSelected = sortIndex === index\r\n    const cssSortSelectedAsc = indexSelected && sortDir === \"dsc\" ? cssSortSelected : {}\r\n    const cssSortSelectedDsc = indexSelected && sortDir === \"asc\" ? cssSortSelected : {}\r\n    const upArrow =\r\n      sort ? (\r\n        <i style={{...cssSortAsc, ...cssSortSelectedAsc}} />\r\n      ) : null\r\n    const downArrow =\r\n      sort ? (\r\n        <i style={{...cssSortDsc, ...cssSortSelectedDsc}} />\r\n      ) : null\r\n    // change creates the function called when a header sort is toggled\r\n    const change = (index: number) => () => {\r\n      const dir = (sortIndex === index && sortDir === \"asc\") ? \"dsc\" : \"asc\"\r\n      setState({ ...state, headers, sortIndex: index, sortDir: dir });\r\n    };\r\n    // if sort is not enabled, clicking should noop, else invoke change\r\n    const onClick = !sort ? () => null : change(index);\r\n    // here is the assembled header rendering\r\n    return (\r\n      <span key={index} style={headerStyle} onClick={onClick}>\r\n        {label} {upArrow} {downArrow}\r\n      </span>\r\n    );\r\n  };\r\n  // renderDataRow will create the <span> with the given data at the designated index,\r\n  // using the provided header\r\n  const renderDataRow = (dataObj: DataObj, rowIndex: number) => (\r\n    header: TableConfigHeader,\r\n    index: number\r\n  ) => {\r\n    const { dataKey, render } = header;\r\n    // if a data render function was specified, use that\r\n    const renderCell = render || defaultRenderFunc;\r\n    // if a datakey isn't provided\r\n    const dataVal: any = !dataKey\r\n      ? // supply the current row dataObject\r\n      dataObj\r\n      : // otherwise if the key is the special 'index' dataKey\r\n      dataKey === indexDataKey\r\n        ? // supply the offset row index\r\n        rowIndex + 1\r\n        : // otherwise supply the row data at the given dataKey\r\n        // emphasize: we do want return 'undefined' here if undefined\r\n        dataObj[dataKey];\r\n    return (\r\n      <span key={index} style={cellStyle}>\r\n        {/* extra spacing after rendering the cell */}\r\n        {renderCell(dataVal)}{\" \"}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const renderDataRows = (tableHeaders: TableConfigHeader[]) => (\r\n    tableData: DataObj,\r\n    indexr: number\r\n  ) => tableHeaders.map(renderDataRow(tableData, indexr));\r\n\r\n  const renderedHeaders = shouldRenderHeaders ? headers.map(renderHeader) : null\r\n  const renderedRows = shouldRenderDatarows ? processSort(props.data, headers, sortDir, sortIndex).map(renderDataRows(headers)) : null\r\n\r\n  return (\r\n    <div className={props.className || \"\"} style={gridStyle}>\r\n      {renderedHeaders}\r\n      {renderedRows}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport Highlight from \"react-highlight\";\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { Link } from \"react-router-dom\";\r\nimport packageJSON from '../../package.json'\r\nimport wwords from \"../content/home-content.json\";\r\nimport { DataObj, NaiveTable } from \"../NaiveTable\";\r\nconst words: { [index: string]: { [index: string]: string } } = wwords\r\n\r\ntype SupportedLangs = keyof typeof words;\r\nconst version = packageJSON.version\r\n\r\nconst blamDataRows = (headers: string[], nToGen: number) => {\r\n  let rows: DataObj[] = [];\r\n  for (let index = 0; index < nToGen; index++) {\r\n    const row: DataObj = {};\r\n    headers.forEach(header => {\r\n      row[header] = Math.random();\r\n    });\r\n    rows = [...rows, row];\r\n  }\r\n  return rows;\r\n};\r\n\r\nconst randomData = blamDataRows([\"foo\", \"bar\", \"baz\"], 5);\r\n// These are the supported languages\r\nconst DEFAULT_LANG = \"en\";\r\ninterface HomeScreenProps {\r\n  lang: SupportedLangs;\r\n}\r\n\r\nexport default class Home extends React.Component<HomeScreenProps> {\r\n  private readonly randomFilenames = ['copy', 'new-hot-startup', 'foobarbaz', 'blockchainz', 'stuff', 'wack-wack-wack', '1']\r\n  private randomFilename = this.randomFilenames[0]\r\n  constructor(props: HomeScreenProps) {\r\n    super(props);\r\n    const rand = Math.floor(Math.random() * this.randomFilenames.length)\r\n    this.randomFilename = this.randomFilenames[rand] || this.randomFilename\r\n    const { lang } = props;\r\n  }\r\n\r\n  public render() {\r\n    // this is the word render function\r\n    // it will display the text content in the given language or in english\r\n    // the red X means there is missing text content\r\n    const W = (input: string) => {\r\n      const display = words[DEFAULT_LANG][input] || \"\";\r\n      return `${display}` || \"❌\";\r\n      // return this.theseWords[input] || this.defaultWords[input] || \"❌\";\r\n    };\r\n    return (\r\n      <div className=\"page-content\">\r\n        <div className=\"wrapper\">\r\n          <h1><span role=\"img\" aria-label=\"Bento\">🍱</span> NaiveTable</h1>\r\n          <h2>\r\n            {W(\"w1\")} {W(\"w2\")} {W(\"w3\")}{\" \"}{`Array<T>`} {W(\"w7\")}\r\n            {W(\"w4\")}{\" \"}\r\n            <a href=\"https://reactjs.org/\">React</a> <a href=\"https://reactjs.org/docs/hooks-intro.html/\">(Hooks)</a>  {W(\"w8\")}</h2>\r\n\r\n          <span>\r\n            <h3>\r\n              v{version} -{\" \"}\r\n              <Link to=\"/test\">Tests</Link>-{\" \"}\r\n              <a href=\"https://github.com/untra/naivetable\">Github</a> -{\" \"}\r\n              <a href=\"https://www.npmjs.com/package/@untra/naivetable\">NPM</a> -{\" \"}\r\n              <a href=\"https://dashboard.cypress.io/#/projects/wrytfx/runs\">Cypress</a>\r\n            </h3>\r\n          </span>\r\n          <hr />\r\n          <div style={{\r\n            padding: '50px',\r\n            color: 'dark gray',\r\n            textAlign: 'center'\r\n          }}>\r\n            <h4>\r\n              <strong>NaiveTable</strong> {W(\"i1\")} <br />{\"(typescript type \"}\r\n              <code>{\"Array<T> of {[index: string]: any}\"}</code>\r\n              {\")\"}<br />\r\n\r\n\r\n              {W(\"i2a\")}\r\n              <code>{\" Array<T> \"}</code>\r\n              {W(\"i2b\")}<br />\r\n              {W(\"i2c\")}<br/><br/>\r\n              <code>{`<NaiveTable data={data} />`}</code>\r\n            </h4>\r\n          </div>\r\n          <Highlight className=\"tsx\">{\r\n            `// react-app-${this.randomFilename}.tsx\r\nimport React from \"react\";\r\nimport { NaiveTable } from \"@untra/naivetable\";\r\n// ${W(\"h0a\")}\r\nconst data = [${JSON.stringify(randomData[0], null, 2)}, ...];\r\n// ${W(\"h0b\")}\r\n<NaiveTable data={data} />`}\r\n          </Highlight>\r\n          <NaiveTable data={randomData} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/***\r\n * Naivetable Tests\r\n * MIT License\r\n * Made with 💙 by @untra\r\n * ---\r\n * tslint:disable-next-line: no-implicit-dependencies\r\n */\r\nimport React from \"react\";\r\nimport flatDataJSON from \"../content/fixtures/flat.json\"\r\nimport llanowarDataJSON from \"../content/fixtures/llanowar.json\";\r\nimport nameDataJSON from \"../content/fixtures/nameData.json\";\r\nimport styledHeadersJSON from \"../content/fixtures/styledHeaders.json\";\r\nimport varietyofDataTypesDataJSON from \"../content/fixtures/varietyOfTypesData.json\";\r\nimport { DataObj, NaiveTable, TableConfigHeader } from \"../NaiveTable\";\r\n\r\n// Hi friend 👋 thanks for reading my naivetable tests!\r\n// maybe you're on this github page?\r\n\r\nconst thisGithubPage =\r\n  \"https://github.com/untra/naivetable/blob/master/src/routes/test.tsx\";\r\n\r\n// If you are, then I want to know you are a talented and skilled engineer,\r\n// and it would certainly be a pleasure to shake your hand one day,\r\n// and tell you personally _just how cool you are_\r\n\r\n// While you're here you may also want to check out that cypress page:\r\nconst thatCypressPage = \"https://dashboard.cypress.io/#/projects/wrytfx/runs\";\r\n\r\n// redefine the data fixtures to accomodate prefered typings\r\n\r\nconst llanowarData: DataObj[] = llanowarDataJSON;\r\n\r\nconst varietyofDataTypesData: DataObj[] = varietyofDataTypesDataJSON;\r\n\r\nconst styledHeaders: TableConfigHeader[] = styledHeadersJSON;\r\n\r\nconst nameData: DataObj[] = nameDataJSON;\r\n\r\n// the secret sauce to display no headers and custom render:\r\n// use css and `dsiplay: none` for the header style\r\nconst mtgHeaders: TableConfigHeader[] = [{\r\n  label: \"\",\r\n  dataKey: \"\",\r\n  style: { display: 'none' },\r\n  render: (val: any) => {\r\n    const  { local_image, name } = val\r\n    return (<img width={250} height={345} alt={name} src={local_image} />)\r\n  }\r\n}, {\r\n  label: \"\",\r\n  dataKey: \"\",\r\n  style: { display: 'none' },\r\n  render: (val: any) => {\r\n    const { name, mana_cost, type_line, oracle_text, power, toughness, flavor_text } = val\r\n    return (<div>\r\n      <h4>{name} {mana_cost}</h4>\r\n      <p>{type_line}</p>\r\n      <p>{oracle_text}</p>\r\n      <p>{flavor_text}</p>\r\n      <strong>{power}/{toughness}</strong>\r\n    </div>)\r\n  }\r\n}]\r\n\r\n// complex headers with custom rendering\r\nexport const nameHeaders = [\r\n  // change the rendered header text with the 'label' parameter\r\n  { label: \"name\", dataKey: \"a\" },\r\n  // individually style each header cell with the 'style' parameter\r\n  { label: \"age\", dataKey: \"b\", style: { backgroundColor: \"pink\" } },\r\n  // provide a 'render' function to control how dataCells render for the column\r\n  {\r\n    label: \"grade status\",\r\n    dataKey: \"c\",\r\n    render: (val: number) => (\r\n      <h2>{`${val > 50 ? \"✅passing\" : \"❌failing\"} the class: ${val}`}</h2>\r\n    )\r\n  },\r\n  // use the 'dataKey' to control the input to the render function\r\n  // provide an empty string to instead call render with the entire dataObject provided\r\n  {\r\n    label: \"assessment\",\r\n    dataKey: \"\",\r\n    render: (val: any) => (\r\n      <h4>{`${JSON.stringify(val.a)} is ${val.c > 90 ? \"really\" : \"\"} ${\r\n        val.c > 50 ? \"smart\" : \"dumb\"\r\n        }`}</h4>\r\n    )\r\n  },\r\n  // you can have more headers than keys in your dataObjects, btw ;)\r\n  // you can also control the 'width' of the column (pass in 'fr' , defaults to 'auto')\r\n  {\r\n    label: \"comment\",\r\n    dataKey: \"\",\r\n    render: () =>\r\n      \"Lorem Ipsum this is the same comment rendered over and over again why won't @LILBTHEBASEDGOD tweet about about me?\",\r\n    width: \"4fr\"\r\n  }\r\n];\r\n\r\nexport default class Test extends React.Component {\r\n  public render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Bento\">\r\n            🍱\r\n          </span>{\" \"}\r\n          NaiveTable\r\n        </h1>\r\n        <h2>Cypress Tests and React Hooks demo</h2>\r\n        <h3>\r\n          View this page and tests at <a href={thisGithubPage}>Github.com</a>\r\n        </h3>\r\n        <h3>\r\n          View the test results at <a href={thatCypressPage}>Cypress.io</a></h3>\r\n        <p>\r\n          This page is a demonstration of the NaiveTable component used in a\r\n          variety of ways:\r\n        </p>\r\n        <ul>\r\n          <li>It is the selection and input to a variety of cypress tests.</li>\r\n          <li>\r\n            View the chrome console to see statistics and reports of how the\r\n            examples render.\r\n          </li>\r\n          <li>\r\n            This is also a demonstration of the power of react-hooks, a\r\n            functional and clean approach to writing react components.\r\n          </li>\r\n        </ul>\r\n        <h4>\r\n          #1 It should be able to render a variety of different javascript data\r\n          types\r\n        </h4>\r\n        <NaiveTable className={\"test1\"} data={varietyofDataTypesData} />\r\n        <h4>#2 It should be able to render an index left adjacent of the data</h4>\r\n        <NaiveTable className={\"test2\"} data={nameData} includeIndex={true} />\r\n        <h4>#3 It should be able to render a table with custom headers</h4>\r\n        <NaiveTable className={\"test3\"} data={nameData} headers={nameHeaders} />\r\n        <h4>#4 It should be able to render individual styling on each header</h4>\r\n        <NaiveTable\r\n          className={\"test4\"}\r\n          data={nameData}\r\n          headers={styledHeaders}\r\n        />\r\n        <h4>#5 It should be able to render individual styling for the table</h4>\r\n        {\"TODO\"}\r\n        <h4>#6 It should be able to render individual styling for each cell</h4>\r\n        {\"TODO\"}\r\n        <h4>#7 It should be able to display sortable columns</h4>\r\n        {\"TODO\"}\r\n        <h4>#8 It should display sorted column data sorted correctly</h4>\r\n        <NaiveTable className={\"test8\"} data={flatDataJSON} headers={[\r\n          { label: 'a', dataKey: 'a', sort: true },\r\n          { label: 'b', dataKey: 'b', sort: \"asc\" },\r\n          { label: 'c', dataKey: 'c' }\r\n        ]} />\r\n        <h4>#9 It should be able to render empty data</h4>\r\n        <NaiveTable className={\"test9\"} data={[]} />\r\n        <h4>#10 It should be able to render a data of one</h4>\r\n        <NaiveTable className={\"test10\"} data={[{ of: \"one\" }]} />\r\n        <h4>#11 You don't have to render any headers at</h4>\r\n        <NaiveTable className={\"test11\"} data={nameData} headers={false} />\r\n        <h4>#12 You can render a Magic The Gathering card</h4>\r\n        <NaiveTable className={\"test11\"} data={llanowarData} headers={mtgHeaders} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport home from \"./home\";\r\nimport test from \"./test\";\r\n\r\n// NOTE: see https://medium.com/@Dragonza/react-router-problem-with-gh-pages-c93a5e243819\r\n// for explanation of BrowserRouter hook-up\r\n\r\nconst reload = () => window.location.reload();\r\n\r\nexport default () => (\r\n  <HashRouter basename=\"/\">\r\n  <Switch>\r\n    <Route path=\"/test\" component={test} onEnter={reload} />\r\n    <Route exact path=\"/\" component={home} />\r\n    <Route\r\n      component={() => (\r\n        <div className=\"wrapper\">\r\n          <h1>{\"404 Not found\"}</h1>{\" \"}\r\n        </div>\r\n      )}\r\n    />\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n","import ReactDOM from \"react-dom\";\r\nimport routes from './routes'\r\n\r\n\r\nReactDOM.render(routes(), document.getElementById(\"root\"));"],"sourceRoot":""}